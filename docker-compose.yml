version: '3.8'
services:

  discovery-server:
    build: ./4fap-back/discovery-server
    networks:
      - 4fap-network
    ports:
      - "8761:8761"

  user-db:
    image: postgres
    networks:
      - 4fap-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - user-data:/var/lib/postgresql/data

  user-service:
    build: ./4fap-back/user-service
    networks:
      - 4fap-network
    ports:
      - "8080:8080"
    depends_on:
      - user-db
      - discovery-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db/users
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: maboukarl2@gmail.com
      SPRING_MAIL_PASSWORD: pwdp yksa qees lbuf
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka

  files-db:
    image: postgres
    networks:
      - 4fap-network
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: files
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - files-data:/var/lib/postgresql/data

  files-service:
    build: ./4fap-back/file-service
    networks:
      - 4fap-network
    ports:
      - "8081:8081"
    depends_on:
      - files-db
      - discovery-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://files-db/files
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: miniosecret
      MINIO_BUCKET_NAME: files
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka

  minio:
    container_name: s3minio
    image: bitnami/minio:latest
    networks:
      - 4fap-network
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data

  nextjs:
    build:
      context: ./4fap-webapp
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE_URL: "http://localhost:8080"
    ports:
      - "3000:3000"

networks:
  4fap-network:

volumes:
  user-data:
  files-data:
  minio_storage:
